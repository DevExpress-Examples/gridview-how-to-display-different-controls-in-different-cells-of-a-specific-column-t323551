
@model System.Collections.IEnumerable

@Html.DevExpress().GridView(settings => {
    settings.Name = "GridView";
    settings.KeyFieldName = "ProductID";
    settings.CallbackRouteValues = new { Controller = "Home", Action = "GridViewPartial" };
    settings.CustomActionRouteValues = new { Controller = "Home", Action = "GridViewCallbackPartial" };
    settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Home", Action = "GridViewAddNewPartial" };
    settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Home", Action = "GridViewUpdatePartial" };
    settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Home", Action = "GridViewDeletePartial" };
   
    settings.CommandColumn.Visible = true;
    settings.CommandColumn.ShowEditButton = true;
    settings.CommandColumn.ShowNewButton = true;
    settings.CommandColumn.ShowDeleteButton = true;

    settings.Columns.Add(column => {
        column.FieldName = "ProductID";
        column.ReadOnly = true;
        column.EditFormSettings.Visible = DefaultBoolean.False;
    });

    settings.Columns.Add("ProductName");
    
    settings.Columns.Add(column => {
        column.FieldName = "UnitPrice";
        column.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left;
        column.CellStyle.BackColor = System.Drawing.Color.LightGray;
        column.CellStyle.Paddings.Padding = 0;
        column.SetDataItemTemplateContent(c => {
            int units = Convert.ToInt32(DataBinder.Eval(c.DataItem, "UnitsOnOrder"));
            if (units == 0) {
                Html.DevExpress().Label(label => {
                    label.Name = "Label" + c.KeyValue.ToString();
                    label.Width = 100;
                }).Bind(DataBinder.Eval(c.DataItem, "UnitPrice")).GetHtml();
            }
            else {
                Html.DevExpress().SpinEdit(spinEdit => {
                    spinEdit.Name = "SpinEdit" + c.KeyValue.ToString();
                    spinEdit.Width = 100;
                    spinEdit.Properties.ClientSideEvents.LostFocus = string.Format("function(s, e) {{ GridView.PerformCallback({{key:  {0}, unitPrice: s.GetValue()}}); }}", c.KeyValue);
                }).Bind(DataBinder.Eval(c.DataItem, "UnitPrice")).GetHtml();
            }
        });
    });
        
    settings.Columns.Add("UnitsOnOrder");
}).SetEditErrorText((string)ViewData["EditError"]).Bind(Model).GetHtml()
